{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "mau-lan",
	"patterns": [
		{
			"include": "#todo-keyword"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#paren-expression"
		},
		{
			"include": "#bool"
		},
		{
			"include": "#ctrl-expressions"
		},
		{
			"include": "#reserved-words"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#markups"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"begin": "//-",
					"name": "comment.line.mau-lang",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.mau-lang"
						}
					},
					"end": "\\n"
				}
			]
		},
		"reserved-words": {
			"patterns": [
				{
					"name": "variable.language.mau-lang",
					"match": "\\b(func|var)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.mau-lang",
					"match": "\\b(if|while|for|return|end|then)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.single.mau-lang",
					"begin": "'",
					"end": "'"
				},
				{
					"name": "string.quoted.double.mau-lang",
					"begin": "\"",
					"end": "\""
				},
				{
					"name": "string.regexp.mau-lang",
					"begin": "\\$\\{",
					"end": "\\}"
				}
			]
		},
		"paren-expression": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "entity.name.method.mau-lang"
						}
					},
					"match": "\\b(\\w+)(?:\\s+([-a-zA-Z0-9_]+))?\\s*(\\()",
					"name": "punctuation.definition.parameters.mau-lang"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?"
				}
			]
		},
		"todo-keyword": {
			"match": "TODO",
			"name": "keyword.todo"
		},
		"bool": {
			"patterns": [
				{
					"match": "\\b(true|false|null)\\b",
					"name": "constant.language.mau-lang"
				}
			]
		}
	},
	"markups": {
		"patterns": [
			{
				"name": "markup.bold.mau-lang",
				"match": "\\b(mau-lang)\\b"
			},
			{
				"name": "constant.character.mau-lang",
				"match": "(@)"
			},
			{
				"name": "keyword.other.mau-lang",
				"match": "\\b(int|str|bool|float|CLS|CLEAR)\\b"
			}
		]
	},
	"scopeName": "source.mau"
}