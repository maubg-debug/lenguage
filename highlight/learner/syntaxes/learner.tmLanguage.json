{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "learner",
    "patterns": [{
            "include": "#todo-keyword"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#reserved-words"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#paren-expression"
        },
        {
            "include": "#bool"
        },
        {
            "include": "#ctrl-expressions"
        },
        {
            "include": "#markups"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [{
                "begin": "//-",
                "name": "comment.line.learner",
                "beginCaptures": {
                    "0": {
                        "name": "punctuation.definition.comment.learner"
                    }
                },
                "end": "\\n"
            }]
        },
        "reserved-words": {
            "patterns": [{
                "name": "variable.language.learner",
                "match": "\\b(func|var|continue|break)\\b"
            }]
        },
        "keywords": {
            "patterns": [{
                "name": "keyword.control.learner",
                "match": "\\b(else|if|while|for|to|not|and|or|return|end|then)\\b"
            }]
        },
        "strings": {
            "patterns": [{
                    "name": "string.quoted.single.learner",
                    "begin": "'",
                    "end": "'"
                },
                {
                    "name": "string.quoted.double.learner",
                    "begin": "\"",
                    "end": "\""
                },
                {
                    "name": "string.regexp.learner",
                    "begin": "\\$\\{",
                    "end": "\\}"
                }
            ]
        },
        "paren-expression": {
            "patterns": [{
                "captures": {
                    "1": {
                        "name": "entity.name.method.learner"
                    }
                },
                "match": "\\b(\\w+)(?:\\s+([-a-zA-Z0-9_]+))?\\s*(\\()",
                "name": "punctuation.definition.parameters.learner"
            }]
        },
        "numbers": {
            "patterns": [{
                "name": "constant.numeric",
                "match": "[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?"
            }]
        },
        "todo-keyword": {
            "match": "TODO",
            "name": "keyword.todo"
        },
        "bool": {
            "patterns": [{
                "match": "\\b(true|false|null)\\b",
                "name": "constant.language.learner"
            }]
        }
    },
    "markups": {
        "patterns": [{
                "name": "markup.bold.learner",
                "match": "\\b(learner)\\b"
            },
            {
                "name": "constant.character.learner",
                "match": "(@)"
            },
            {
                "name": "keyword.other.learner",
                "match": "\\b(int|str|bool|float|CLS|CLEAR)\\b"
            }
        ]
    },
    "scopeName": "source.lr"
}